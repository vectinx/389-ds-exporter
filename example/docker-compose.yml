version: '3.8'

services:
  389ds-mdb:
    # Using dirsrv with LMDB support by default
    image: 389ds/dirsrv:3.0
    container_name: 389ds-mdb
    ports:
      - "3389:3389"
    environment:
      DS_DM_PASSWORD: "12345678"
      SUFFIX_NAME: "dc=example,dc=com"
    volumes:
      # Uncommend next line if you want to dirsrv data be saved
      # - ./389ds-mdb-data:/data
      - ./entrypoint.sh:/app/entrypoint.sh:ro
    entrypoint: /app/entrypoint.sh

  389ds-exporter-mdb:
    image: vectinx/389-ds-exporter:latest
    container_name: 389ds-exporter-mdb
    ports:
      - "9389:9389"
    volumes:
      - ./config-mdb.yml:/app/config-mdb.yml:ro
    command: ["--config", "/app/config-mdb.yml"]
    depends_on:
      389ds-mdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9389/health"]
      interval: 30s
      timeout: 10s

  389ds-bdb:
    # Using dirsrv with BDB support by default
    image: 389ds/dirsrv:2.4
    container_name: 389ds-bdb
    ports:
      - "3390:3389"
    environment:
      DS_DM_PASSWORD: "12345678"
      SUFFIX_NAME: "dc=example,dc=com"
    volumes:
      # Uncommend next line if you want to dirsrv data be saved
      # - ./389ds-bdb-data:/data
      - ./entrypoint.sh:/app/entrypoint.sh:ro
    entrypoint: /app/entrypoint.sh

  389ds-exporter-bdb:
    image: vectinx/389-ds-exporter:latest
    container_name: 389ds-exporter-bdb
    ports:
      - "9390:9389"
    volumes:
      - ./config-bdb.yml:/app/config-bdb.yml:ro
    command: ["--config", "/app/config-bdb.yml"]
    depends_on:
      389ds-bdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9389/health"]
      interval: 30s
      timeout: 10s

  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=light
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dashboard.json

  # Service container for configuring grafana after launch
  dashboard-init:
      image: curlimages/curl
      depends_on:
        - grafana
      entrypoint: >
        /bin/sh -c "
          sleep 10 &&
          wget https://github.com/vectinx/389-ds-exporter/releases/download/0.2.0/dashboard.json -O dashboard.json &&
          echo '{\"dashboard\": ' > payload.json &&
          cat dashboard.json >> payload.json &&
          echo ', \"overwrite\": true, \"folderId\": 0 }' >> payload.json &&
          cat payload.json &&
          curl -X POST -H \"Content-Type: application/json\" -d @payload.json http://grafana:3000/api/dashboards/db
          curl -X PUT http://grafana:3000/api/org/preferences -H \"Content-Type: application/json\" -d '{ \"homeDashboardUID\": \"389-ds\" }'
        "
